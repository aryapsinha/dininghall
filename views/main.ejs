<%- include('_header.ejs') %>
<style>
    .default{
        font-family:'Times New Roman', Times, serif;
       
    }
    h1{
        font-size: 60px;
    }
    .box{
        background-color: peachpuff;
        padding: 5px; /* Padding inside the boxes */
        margin-bottom: 15px; /* Space between boxes */
    }
    .bubble{
        outline: 2px black none;
    }
    .shortbox{
        background-color: #fadec5; /* Light background for the boxes */
        border: 1px solid #ddd; /* Light border */
        border-radius: 5px; /* Rounded corners */
        padding: 5px; /* Padding inside the boxes */
        margin-bottom: 15px; /* Space between boxes */
        height: 40%; /* Make boxes stretch vertically */
    }
    .longbox{
        background-color: #fadec5; /* Light background for the boxes */
        border: 1px solid #ddd; /* Light border */
        border-radius: 5px; /* Rounded corners */
        padding: 5px; /* Padding inside the boxes */
        margin-bottom: 15px; /* Space between boxes */
        height: 100%; /* Make boxes stretch vertically */
    }
    h5{
        text-align: center;
    }
    a{
        color:black;
    }
</style>

<div class = "container default mx-auto p-2">

    <h1>Hello, Your Name!</h1>
</div>
<br>
<div class="container bubble">
    <div class = "row">
        <div class = "col"><h3>For You:</h3></div>
        <div class = "col"><h3>My Balance:</h3></div>
    </div>
    <div class="row">
        
        <div class="col-6"> <!-- Each box will take half of the screen -->
            
            <div class="box">
                <h4>Corn Bread</h4>
                <p>Ferris Booth Commons</p>
            </div>
           
            
        </div>
        
        <div class="col"> <!-- Right half of the screen -->
           
            <div class="shortbox">
                
                <h5>119 Swipes</h5>

            </div>
            <a href = "/balance">See More</a>
        </div>
        <div class="col">
            <div class=" shortbox">
                <h5>218 Points</h5>
                
            </div>
            
        </div>
        
    </div>
    <div class = "row">
        <div class = "col-6">
            <div class="box">
                <h4>General Tsao's Chicken</h4>
                <p>John Jay Dining Hall</p>
            </div>
            
            <div class="box">
                <h4>Mac and Cheese</h4>
                <p>Hewitt Dining Hall</p>
            </div>
        </div>
        <div class = "col">
            <div class = "longbox">
                <h5>What's Cookin'</h5>
                <ul>
                    <% if (openDiningHalls && openDiningHalls.length > 0) { %>
                        <% openDiningHalls.forEach(item => { %>
                            <li><%= item %></li>
                        <% }); %>
                    <% } else { %>
                        <li>No dining halls open. You're cooked.</li>
                    <% } %>
                </ul>
            </div>
        </div>
    </div>
</div>



<script>
    // Function to load the state of dining halls and display them
    function loadDiningHallStates() {
        // Array of dining halls
        const diningHalls = [
            { id: 'hewitt', name: "Hewitt Dining Hall" },
            { id: 'johnJay', name: "John Jay Dining Hall" },
            { id: 'ferris', name: "Ferris Booth Commons" },
            // Add more dining halls here as needed
        ];
    
        const ul = document.getElementById('diningHallList');
        ul.innerHTML = ''; // Clear existing list
    
        // Check which dining halls are checked and push to arrays
        const checkedHalls = [];
        const uncheckedHalls = [];
    
        diningHalls.forEach(hall => {
            const hallElement = document.getElementById(hall.id);
            if (hallElement) {
                // Assuming the checkbox is checked (you will need to implement the checkbox)
                const isChecked = hallElement.querySelector('input[type="checkbox"]')?.checked;
    
                if (isChecked) {
                    checkedHalls.push(hall.name);
                } else {
                    uncheckedHalls.push(hall.name);
                }
            }
        });
    
        // Combine checked and unchecked lists
        const orderedHalls = [...checkedHalls, ...uncheckedHalls];
    
        // Populate the unordered list with dining hall names
        orderedHalls.forEach(hallName => {
            const li = document.createElement('li');
            li.textContent = hallName;
            ul.appendChild(li);
        });
    }
    
    // Load dining hall states when the window loads
    window.onload = loadDiningHallStates;
    </script>


<%- include('_footer.ejs') %>